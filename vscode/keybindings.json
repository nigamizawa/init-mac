// Place your key bindings in this file to override the defaults
[
  // ====================================
  // explorer
  // ====================================
  // 'ctrl+e' -> open or switch exploer
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  // 'ctrl+cmd+e' -> toggle explorer
  {
    "key": "ctrl+cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  // ====================================
  // source control
  // ====================================
  // "ctrl+cmd+g" でgit操作
  {
    "key": "ctrl+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  // ====================================
  // switch tabs
  // ====================================
  {
    "key": "ctrl+p",
    "command": "workbench.action.previousEditorInGroup",
    "when": "editorFocus && editorTextFocus && inputFocus && !bannerFocused && !listFocus && !parameterHintsMultipleSignatures && !parameterHintsVisible && !searchViewletFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !terminalFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.nextEditorInGroup",
    "when": "editorFocus && editorTextFocus && inputFocus && !bannerFocused && !listFocus && !parameterHintsMultipleSignatures && !parameterHintsVisible && !searchViewletFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  // remove default shortcuts
  {
    "key": "cmd+k alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+k alt+cmd+right",
    "command": "-workbench.action.nextEditorInGroup"
  },
  // ====================================
  // switch editor groups (h, j, k, l)
  // ====================================
  // switch editor groups with vim shortcuts
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup"
  },
  // remove default shortcuts
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.vim_ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "key": "ctrl+h",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  // ====================================
  // Definition/References jump
  // ====================================
  // Definition jump
  {
    "key": "ctrl+]",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+cmd+]",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // References jump
  {
    "key": "ctrl+\\",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  // ====================================
  // switch window
  // ====================================
  {
    "key": "ctrl+w",
    "command": "workbench.action.switchWindow",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  }
]
